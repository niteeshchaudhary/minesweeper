/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package minswp;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import static javax.swing.SwingConstants.CENTER;
/**
 *
 * @NKC
 */
public class ButtonHandler extends javax.swing.JPanel {

    /*
     * Creates new form ButtonHandler
     */
    DButton db;
    int r=0,c=0,NKC=0;
    Stage st;
    public ButtonHandler(int i, int j,Stage s,MinSwp msp) {
        initComponents();
        db = new DButton(msp);
        r=i;c=j;
        st=s;
        db.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(((DButton)(evt.getSource())).isMine())
                {
                    ((DButton)(evt.getSource())).showMine();
                    ((DButton)(evt.getSource())).setBackground(Color.red);
                    s.setDisable(msp.l,msp.w);
                    s.discloseMine();
                    msp.lost();
                    ((DButton)(evt.getSource())).setEnabled(true);
                }
                else
                {
                    ((DButton)(evt.getSource())).setVisible(false);
                    ((DButton)(evt.getSource())).setEnabled(false);
                    msp.lft--;
                    if(msp.lft==msp.m)
                    {
                        s.setDisable(msp.l, msp.w);
                        s.discloseMine();
                        msp.won();
                    }
                    addLabel();
                }
            }
        });
        db.addMouseListener(new java.awt.event.MouseListener(){
            @Override
            public void mouseClicked(MouseEvent e) {
                rightClick(e);
            }
            @Override
            public void mousePressed(MouseEvent e) {}
            @Override
            public void mouseReleased(MouseEvent e) {}
            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {}
        });
        this.add(db);
    }
    boolean en=true;
    public void rightClick(MouseEvent e)
    {
        if(e.getButton()!=1)
        {
            db.setFlaged(en);
            en=!en;
        }
    }
    public void setMine(Boolean b)
    {
        db.mine=b;
    }
    
    public void addLabel()
    {
        remove(0);
        JLabel lb=new JLabel();
        lb.setVerticalTextPosition(CENTER);
        lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb.setFont(new java.awt.Font("Tahoma", 1, 16));
        if(getNum()==0)
        {
        lb.setText("");
        }
        else if(getNum()==1)
        {
            lb.setText(getNum()+"");
            lb.setForeground(Color.BLUE);
        }
        else if(getNum()==2)
        {
            lb.setText(getNum()+"");
            lb.setForeground(Color.GREEN);
        }
        else if(getNum()==3)
        {
            lb.setText(getNum()+"");
            lb.setForeground(Color.RED);
        }
        else if(getNum()==4)
        {
            lb.setText(getNum()+"");
            lb.setForeground(Color.PINK);
        }
        else
        {
            lb.setText(getNum()+"");
            lb.setForeground(Color.WHITE);
        }
        NKC=getNum();
        add(lb);
        addNum(-1);
        st.clear(r, c);
    }
    public void removeLabel()
    {
        remove(0);
        this.add(db);
    }
    public void addNum(int n)
    {
        if(db.num!=10)
        {
            db.num=n;
        }
    }
    public int getNum()
    {
        return db.num;
    }
    int ai=0;
      public void ai_rightClick()
    {
        if(ai==0)
        {
            db.setFlaged(true);
            ai=1;
            en=false;
        } 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 0, 0));
        setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 204)));
        setLayout(new java.awt.GridLayout(1, 1));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
